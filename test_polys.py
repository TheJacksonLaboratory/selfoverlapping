import matplotlib.pyplot as plt
import numpy as np
import argparse
import os


def test_1():
    return np.array([[[149.976190,265.226190],
        [166.226190,263.678571],
        [186.345238,262.130952],
        [210.333333,245.880952],
        [238.964286,209.511905],
        [251.345238,170.047619],
        [255.988095,131.357143],
        [249.023810,102.726190],
        [239.738095,72.547619],
        [226.583333,51.654762],
        [206.464286,37.726190],
        [180.928571,30.761905],
        [158.488095,28.440476],
        [121.345238,32.309524],
        [97.357143,40.821429],
        [83.428571,63.261905],
        [78.011905,86.476190],
        [80.333333,108.916667],
        [95.809524,132.130952],
        [112.833333,139.869048],
        [126.761905,149.928571],
        [136.047619,163.857143],
        [126.761905,178.559524],
        [112.833333,180.880952],
        [102.773810,172.369048],
        [102.000000,157.666667],
        [110.511905,147.607143],
        [123.666667,135.226190],
        [133.726190,130.583333],
        [146.880952,122.845238],
        [167.773810,114.333333],
        [176.285714,102.726190],
        [185.571429,88.023810],
        [190.214286,67.904762],
        [184.797619,45.464286],
        [164.678571,19.154762],
        [139.142857,6.773810],
        [107.416667,2.130952],
        [60.988095,21.476190],
        [38.547619,43.142857],
        [22.297619,71.000000],
        [13.785714,101.952381],
        [12.238095,136.773810],
        [12.238095,164.630952],
        [18.428571,196.357143],
        [26.166667,214.154762],
        [34.678571,229.630952],
        [43.964286,235.821429],
        [55.571429,242.785714],
        [68.726190,244.333333],
        [85.750000,247.428571],
        [108.190476,246.654762],
        [122.892857,245.107143],
        [132.178571,243.559524],
        [139.916667,240.464286],
        [149.202381,237.369048],
        [159.261905,230.404762],
        [165.452381,222.666667],
        [170.869048,209.511905],
        [171.642857,195.583333],
        [171.642857,180.107143],
        [168.547619,165.404762],
        [164.678571,154.571429],
        [153.071429,136.000000],
        [130.630952,119.750000],
        [119.797619,110.464286],
        [108.964286,101.178571],
        [102.000000,84.928571],
        [109.738095,75.642857],
        [127.535714,72.547619],
        [138.369048,79.511905],
        [141.464286,93.440476],
        [136.821429,105.047619],
        [117.476190,120.523810],
        [105.095238,126.714286],
        [91.166667,139.869048],
        [80.333333,153.023810],
        [71.047619,165.404762],
        [63.309524,180.107143],
        [64.083333,197.130952],
        [64.083333,211.833333],
        [68.726190,227.309524],
        [81.880952,238.142857],
        [105.869048,253.619048],
        [119.797619,259.035714],
        [135.273810,262.130952]]], dtype=np.int32)


def test_2():
    return np.array([[[238,259],
        [254,334],
        [284,388],
        [318,421],
        [363,439],
        [432,433],
        [499,369],
        [512,312],
        [504,258],
        [481,174],
        [428,100],
        [369,50],
        [318,15],
        [241,0],
        [195,2],
        [156,11],
        [102,53],
        [67,119],
        [27,190],
        [6,267],
        [0,341],
        [8,410],
        [41,471],
        [91,504],
        [158,512],
        [220,506],
        [272,485],
        [324,453],
        [331,413],
        [324,363],
        [291,336],
        [244,317],
        [222,306],
        [198,277],
        [206,240],
        [228,238]]], dtype=np.int32)


def test_3():
    return np.array([[[271,200],
        [267,251],
        [267,312],
        [269,381],
        [271,425],
        [321,471],
        [367,483],
        [416,474],
        [478,436],
        [510,370],
        [512,279],
        [504,188],
        [470,91],
        [414,36],
        [303,0],
        [206,0],
        [134,31],
        [75,98],
        [31,193],
        [0,293],
        [1,391],
        [51,461],
        [111,502],
        [210,512],
        [252,446],
        [271,422],
        [269,381],
        [271,309],
        [265,254],
        [269,199],
        [248,169],
        [277,146],
        [307,168]]], dtype=np.int32)


def test_4():
    return np.array([[[231,512],
        [414,33],
        [0,324],
        [512,359],
        [139,0]]], dtype=np.int32)


def test_5():
    return np.array([[[343,205],
        [307,230],
        [294,280],
        [303,341],
        [327,377],
        [370,392],
        [412,380],
        [444,335],
        [460,272],
        [468,205],
        [445,103],
        [406,19],
        [354,0],
        [292,3],
        [246,32],
        [192,82],
        [175,145],
        [174,247],
        [184,315],
        [217,364],
        [252,375],
        [301,369],
        [337,333],
        [349,285],
        [333,209],
        [316,160],
        [300,105],
        [282,71],
        [262,46],
        [232,17],
        [168,14],
        [88,25],
        [51,69],
        [9,128],
        [3,173],
        [0,239],
        [1,283],
        [13,354],
        [48,406],
        [84,450],
        [153,489],
        [250,512],
        [298,512],
        [385,495],
        [427,476],
        [460,448],
        [492,387],
        [508,315],
        [512,259],
        [508,212],
        [489,168],
        [387,142],
        [282,163],
        [247,176],
        [196,207],
        [148,254],
        [132,356],
        [178,439],
        [252,461],
        [351,461],
        [385,426],
        [390,372],
        [390,315],
        [364,273],
        [343,247],
        [309,213],
        [315,174],
        [340,171],
        [361,178],
        [366,221],
        [349,225]]], dtype=np.int32)


def test_6():
    return np.array([[[258,236],
        [473,512],
        [512,0],
        [0,498],
        [25,6]]], dtype=np.int32)


def test_7():
    return np.array([[[174,323],
        [184,394],
        [249,453],
        [334,471],
        [447,405],
        [509,285],
        [505,186],
        [480,111],
        [420,39],
        [295,1],
        [155,12],
        [62,60],
        [5,153],
        [1,261],
        [34,369],
        [88,462],
        [199,484],
        [322,436],
        [419,363],
        [462,271],
        [466,197],
        [443,123],
        [388,69],
        [290,32],
        [160,38],
        [78,78],
        [27,159],
        [14,260],
        [44,360],
        [48,379],
        [33,369],
        [0,264],
        [7,152],
        [62,61],
        [156,12],
        [293,0],
        [421,38],
        [482,111],
        [503,187],
        [512,286],
        [445,407],
        [299,510],
        [214,512],
        [140,442],
        [114,342],
        [143,270]]], dtype=np.int32)


def test_8():
    return np.array([[[209,414],
        [187,457],
        [155,495],
        [93,512],
        [61,488],
        [8,382],
        [0,258],
        [6,162],
        [34,95],
        [91,44],
        [186,5],
        [274,1],
        [338,1],
        [402,24],
        [454,55],
        [489,120],
        [510,192],
        [510,273],
        [499,323],
        [477,334],
        [465,306],
        [464,262],
        [464,215],
        [458,149],
        [432,95],
        [387,54],
        [350,55],
        [276,41],
        [180,45],
        [93,87],
        [61,151],
        [37,231],
        [37,330],
        [50,402],
        [82,456],
        [122,459],
        [155,409],
        [106,416],
        [57,416],
        [9,382],
        [0,259],
        [3,162],
        [34,98],
        [93,43],
        [188,6],
        [270,0],
        [341,1],
        [404,24],
        [456,56],
        [488,122],
        [512,195],
        [510,271],
        [497,328],
        [470,394],
        [437,428],
        [390,441],
        [324,446],
        [264,441],
        [236,421]]], dtype=np.int32)


def test_9():
    return np.array([[[252,357],
        [266,393],
        [290,441],
        [328,482],
        [401,497],
        [449,474],
        [493,412],
        [510,339],
        [512,265],
        [508,214],
        [478,156],
        [435,111],
        [379,88],
        [313,83],
        [209,92],
        [138,110],
        [86,146],
        [51,212],
        [36,295],
        [34,397],
        [59,454],
        [99,488],
        [155,508],
        [207,512],
        [290,499],
        [344,466],
        [414,381],
        [472,279],
        [480,217],
        [489,128],
        [473,43],
        [422,6],
        [314,0],
        [206,0],
        [135,32],
        [53,87],
        [5,170],
        [0,292],
        [13,348],
        [46,375],
        [70,383],
        [93,370],
        [95,343],
        [78,327],
        [48,297],
        [27,264],
        [20,208],
        [35,146],
        [63,100],
        [149,41],
        [217,16],
        [314,15],
        [421,26],
        [475,128],
        [445,276],
        [399,375],
        [339,449],
        [287,478],
        [203,490],
        [140,487],
        [86,440],
        [64,403],
        [57,354],
        [61,282],
        [89,194],
        [129,151],
        [189,124],
        [304,118],
        [258,143],
        [181,171],
        [147,264],
        [149,322],
        [161,365],
        [179,404],
        [201,449],
        [228,462],
        [267,465],
        [294,457],
        [305,438],
        [303,406],
        [289,393],
        [266,382],
        [249,377],
        [218,351],
        [218,334],
        [249,333],
        [254,348]]], dtype=np.int32)


def test_10():
    return np.array([[[313,0],
        [388,80],
        [321,344],
        [305,404],
        [304,437],
        [330,456],
        [361,442],
        [383,414],
        [386,382],
        [382,356],
        [355,322],
        [327,301],
        [299,298],
        [272,307],
        [248,327],
        [245,351],
        [263,363],
        [313,365],
        [368,369],
        [406,363],
        [453,365],
        [474,378],
        [510,412],
        [512,475],
        [501,505],
        [466,512],
        [363,512],
        [273,512],
        [156,507],
        [56,502],
        [30,483],
        [3,443],
        [0,424],
        [16,380],
        [68,374],
        [169,355],
        [262,318],
        [309,306],
        [369,271],
        [392,249],
        [411,238],
        [442,231],
        [449,267],
        [424,294],
        [397,316],
        [360,331],
        [309,344],
        [250,370],
        [184,390],
        [83,405],
        [20,433],
        [43,465],
        [66,477],
        [160,477],
        [282,486],
        [357,482],
        [458,487],
        [483,484],
        [484,457],
        [470,420],
        [453,396],
        [411,396],
        [362,427],
        [329,441],
        [275,422],
        [215,396],
        [196,378],
        [161,328],
        [159,290],
        [167,260],
        [201,250],
        [260,250],
        [330,264],
        [373,298],
        [407,325],
        [416,400],
        [410,454],
        [368,494],
        [317,506],
        [274,473],
        [250,435],
        [261,341],
        [250,94]]], dtype=np.int32)


def create_poly():
    class LineBuilder:
            def __init__(self, line):
                self.line = line
                self.xs = list(line.get_xdata())
                self.ys = list(line.get_ydata())
                self.cid = line.figure.canvas.mpl_connect('button_press_event', self)

            def __call__(self, event):
                print('click', event)
                if event.inaxes!=self.line.axes: return
                self.xs.append(event.xdata)
                self.ys.append(event.ydata)
                self.line.set_data(self.xs, self.ys)
                self.line.figure.canvas.draw()

    fig, ax = plt.subplots()
    ax.set_title('click to build line segments')
    line, = ax.plot([0], [0], 'ro-')  # empty line
    linebuilder = LineBuilder(line)
    plt.show()

    new_poly = np.vstack((linebuilder.xs, linebuilder.ys)).T

    # Normalize the coordinates to the range [0, 511]
    new_poly = (new_poly - np.min(new_poly, axis=0)) / (np.max(new_poly, axis=0) - np.min(new_poly, axis=0)) * 512
    new_poly = new_poly.astype(np.int32)

    return new_poly
    

if __name__ == "__main__":
    parser = argparse.ArgumentParser('Polygon creation module')
    parser.add_argument('-d', '--dir', type=str, dest='output_dir', help='Directory where to save the new polygon', default='.')
    parser.add_argument('-o', '--output', type=str, dest='output', help='Output filename of the new polygon', required=True)

    args = parser.parse_args()

    new_poly = create_poly()
    print('New polygon', new_poly)

    np.save(os.path.join(args.output_dir, args.output + '.npy'), new_poly)
    with open(os.path.join(args.output_dir, args.output + '.txt'), 'w') as f:
        f.write('np.array([[')
        for x, y in new_poly[:-1,:]:
            f.write('[%i,%i],\n' % (x, y))
        f.write('[%i,%i]]], dtype=np.int32)' % (new_poly[-1, 0], new_poly[-1, 1]))
    
    print('Saved polygon in %s' % args.output)
