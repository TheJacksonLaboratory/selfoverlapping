import matplotlib.pyplot as plt
import numpy as np
import argparse
import os
from PIL import Image


def test_1():
    return np.array([[[149.976190,265.226190],
        [166.226190,263.678571],
        [186.345238,262.130952],
        [210.333333,245.880952],
        [238.964286,209.511905],
        [251.345238,170.047619],
        [255.988095,131.357143],
        [249.023810,102.726190],
        [239.738095,72.547619],
        [226.583333,51.654762],
        [206.464286,37.726190],
        [180.928571,30.761905],
        [158.488095,28.440476],
        [121.345238,32.309524],
        [97.357143,40.821429],
        [83.428571,63.261905],
        [78.011905,86.476190],
        [80.333333,108.916667],
        [95.809524,132.130952],
        [112.833333,139.869048],
        [126.761905,149.928571],
        [136.047619,163.857143],
        [126.761905,178.559524],
        [112.833333,180.880952],
        [102.773810,172.369048],
        [102.000000,157.666667],
        [110.511905,147.607143],
        [123.666667,135.226190],
        [133.726190,130.583333],
        [146.880952,122.845238],
        [167.773810,114.333333],
        [176.285714,102.726190],
        [185.571429,88.023810],
        [190.214286,67.904762],
        [184.797619,45.464286],
        [164.678571,19.154762],
        [139.142857,6.773810],
        [107.416667,2.130952],
        [60.988095,21.476190],
        [38.547619,43.142857],
        [22.297619,71.000000],
        [13.785714,101.952381],
        [12.238095,136.773810],
        [12.238095,164.630952],
        [18.428571,196.357143],
        [26.166667,214.154762],
        [34.678571,229.630952],
        [43.964286,235.821429],
        [55.571429,242.785714],
        [68.726190,244.333333],
        [85.750000,247.428571],
        [108.190476,246.654762],
        [122.892857,245.107143],
        [132.178571,243.559524],
        [139.916667,240.464286],
        [149.202381,237.369048],
        [159.261905,230.404762],
        [165.452381,222.666667],
        [170.869048,209.511905],
        [171.642857,195.583333],
        [171.642857,180.107143],
        [168.547619,165.404762],
        [164.678571,154.571429],
        [153.071429,136.000000],
        [130.630952,119.750000],
        [119.797619,110.464286],
        [108.964286,101.178571],
        [102.000000,84.928571],
        [109.738095,75.642857],
        [127.535714,72.547619],
        [138.369048,79.511905],
        [141.464286,93.440476],
        [136.821429,105.047619],
        [117.476190,120.523810],
        [105.095238,126.714286],
        [91.166667,139.869048],
        [80.333333,153.023810],
        [71.047619,165.404762],
        [63.309524,180.107143],
        [64.083333,197.130952],
        [64.083333,211.833333],
        [68.726190,227.309524],
        [81.880952,238.142857],
        [105.869048,253.619048],
        [119.797619,259.035714],
        [135.273810,262.130952]]], dtype=np.int32)


def test_2():
    return np.array([[[72,243],
[40,274],
[6,317],
[10,366],
[34,383],
[84,373],
[132,339],
[190,292],
[275,228],
[311,196],
[346,147],
[357,55],
[308,22],
[263,4],
[175,0],
[91,7],
[26,39],
[6,93],
[0,142],
[21,193],
[80,242],
[123,279],
[168,308],
[205,351],
[243,364],
[291,370],
[344,357],
[367,333],
[410,323],
[422,327],
[442,339],
[440,357],
[425,380],
[406,404],
[383,421],
[359,429],
[322,426],
[307,411],
[290,407],
[260,404],
[246,421],
[238,445],
[241,471],
[268,499],
[334,512],
[404,509],
[446,489],
[467,459],
[496,392],
[508,347],
[512,298],
[493,259],
[479,249],
[414,247],
[363,252],
[327,270],
[291,291],
[265,295],
[244,286],
[228,260],
[207,236],
[183,217],
[151,200],
[133,165],
[121,138],
[131,104],
[149,100],
[187,95],
[212,114],
[199,151],
[169,183],
[125,205],
[91,224]]], dtype=np.int32)


def test_3():
    return np.array([[[271,200],
        [267,251],
        [267,312],
        [269,381],
        [271,425],
        [321,471],
        [367,483],
        [416,474],
        [478,436],
        [510,370],
        [512,279],
        [504,188],
        [470,91],
        [414,36],
        [303,0],
        [206,0],
        [134,31],
        [75,98],
        [31,193],
        [0,293],
        [1,391],
        [51,461],
        [111,502],
        [210,512],
        [252,446],
        [271,422],
        [269,381],
        [271,309],
        [265,254],
        [269,199],
        [248,169],
        [277,146],
        [307,168]]], dtype=np.int32)


def test_4():
    return np.array([[[231,512],
        [414,33],
        [0,324],
        [512,359],
        [139,0]]], dtype=np.int32)


def test_5():
    return np.array([[[343,205],
        [307,230],
        [294,280],
        [303,341],
        [327,377],
        [370,392],
        [412,380],
        [444,335],
        [460,272],
        [468,205],
        [445,103],
        [406,19],
        [354,0],
        [292,3],
        [246,32],
        [192,82],
        [175,145],
        [174,247],
        [184,315],
        [217,364],
        [252,375],
        [301,369],
        [337,333],
        [349,285],
        [333,209],
        [316,160],
        [300,105],
        [282,71],
        [262,46],
        [232,17],
        [168,14],
        [88,25],
        [51,69],
        [9,128],
        [3,173],
        [0,239],
        [1,283],
        [13,354],
        [48,406],
        [84,450],
        [153,489],
        [250,512],
        [298,512],
        [385,495],
        [427,476],
        [460,448],
        [492,387],
        [508,315],
        [512,259],
        [508,212],
        [489,168],
        [387,142],
        [282,163],
        [247,176],
        [196,207],
        [148,254],
        [132,356],
        [178,439],
        [252,461],
        [351,461],
        [385,426],
        [390,372],
        [390,315],
        [364,273],
        [343,247],
        [309,213],
        [315,174],
        [340,171],
        [361,178],
        [366,221],
        [349,225]]], dtype=np.int32)


def test_6():
    return np.array([[[258,236],
        [473,512],
        [512,0],
        [0,498],
        [25,6]]], dtype=np.int32)


def test_7():
    return np.array([[[73,106],
[67,265],
[74,317],
[94,383],
[120,416],
[173,433],
[232,434],
[277,427],
[307,410],
[331,388],
[341,366],
[348,332],
[338,285],
[313,257],
[232,213],
[134,212],
[66,231],
[9,266],
[0,304],
[20,331],
[44,321],
[72,304],
[132,275],
[191,273],
[252,303],
[261,332],
[252,354],
[219,371],
[181,366],
[151,351],
[141,338],
[138,308],
[138,275],
[135,212],
[138,139],
[181,114],
[224,120],
[257,145],
[260,165],
[232,215],
[192,273],
[165,315],
[155,336],
[150,371],
[150,391],
[155,429],
[188,488],
[226,508],
[259,512],
[283,509],
[295,497],
[301,490],
[277,478],
[240,464],
[227,446],
[222,433],
[219,393],
[219,370],
[235,328],
[255,303],
[316,257],
[341,231],
[375,209],
[403,217],
[424,241],
[436,257],
[424,286],
[403,309],
[368,329],
[347,333],
[301,334],
[260,331],
[234,327],
[197,319],
[164,313],
[139,308],
[99,313],
[73,325],
[53,334],
[35,352],
[16,385],
[17,400],
[40,417],
[56,412],
[70,402],
[102,394],
[150,391],
[219,395],
[271,395],
[327,393],
[372,391],
[427,378],
[453,364],
[486,337],
[509,300],
[512,267],
[506,238],
[481,199],
[462,178],
[451,168],
[413,151],
[384,134],
[349,116],
[335,97],
[349,70],
[375,67],
[403,72],
[403,105],
[397,126],
[383,135],
[363,147],
[336,157],
[324,179],
[313,204],
[313,215],
[327,228],
[335,234],
[356,238],
[373,238],
[387,227],
[398,215],
[426,194],
[452,170],
[493,132],
[509,101],
[512,57],
[499,31],
[457,14],
[364,0],
[270,0],
[189,10],
[135,19],
[96,48],
[79,78]]], dtype=np.int32)


def test_8():
    return np.array([[[217,233],
[219,242],
[223,254],
[198,251],
[124,237],
[57,233],
[20,248],
[0,272],
[1,297],
[38,337],
[95,359],
[140,365],
[188,345],
[195,323],
[150,302],
[122,273],
[148,270],
[183,276],
[198,286],
[188,305],
[140,318],
[91,328],
[57,338],
[38,351],
[29,372],
[44,395],
[103,413],
[155,432],
[207,453],
[257,472],
[325,485],
[373,489],
[420,491],
[449,490],
[454,462],
[441,445],
[392,437],
[314,426],
[240,411],
[197,403],
[157,386],
[150,376],
[179,363],
[195,363],
[221,382],
[214,414],
[216,468],
[235,507],
[275,512],
[299,497],
[300,475],
[292,446],
[285,403],
[280,370],
[311,368],
[342,374],
[377,383],
[415,395],
[409,420],
[361,428],
[281,433],
[214,438],
[159,443],
[83,450],
[69,464],
[83,479],
[124,490],
[219,476],
[313,466],
[396,455],
[467,448],
[512,432],
[512,405],
[475,385],
[404,353],
[349,336],
[318,329],
[285,318],
[266,310],
[295,304],
[333,304],
[380,309],
[416,304],
[413,287],
[413,268],
[451,252],
[463,245],
[491,217],
[510,187],
[482,161],
[415,156],
[366,161],
[335,174],
[323,192],
[339,231],
[363,261],
[363,276],
[333,283],
[300,277],
[300,252],
[321,237],
[359,233],
[403,230],
[432,222],
[461,206],
[458,176],
[435,151],
[359,131],
[268,94],
[202,67],
[150,51],
[110,53],
[100,76],
[140,98],
[190,118],
[240,137],
[288,156],
[330,167],
[356,187],
[342,199],
[313,205],
[290,196],
[294,167],
[290,135],
[299,102],
[304,72],
[304,46],
[307,23],
[292,9],
[259,0],
[224,10],
[217,45],
[219,96],
[228,130],
[211,159],
[216,188],
[197,199],
[167,176],
[185,151],
[207,149],
[250,143],
[302,137],
[352,136],
[404,129],
[434,119],
[435,97],
[409,86],
[363,83],
[309,92],
[261,97],
[211,106],
[159,115],
[86,131],
[81,143],
[93,170],
[103,191],
[138,208],
[171,224]]], dtype=np.int32)


def test_9():
    return np.array([[[414,347],
[414,301],
[383,181],
[354,129],
[297,76],
[277,69],
[245,72],
[186,94],
[158,122],
[149,147],
[150,215],
[172,251],
[198,270],
[219,295],
[226,347],
[209,353],
[196,350],
[188,328],
[200,304],
[214,309],
[237,322],
[259,343],
[285,378],
[312,407],
[339,420],
[374,434],
[429,432],
[512,354],
[500,216],
[447,132],
[408,96],
[269,44],
[152,82],
[119,148],
[119,219],
[174,354],
[225,382],
[284,342],
[303,300],
[315,298],
[325,306],
[319,347],
[299,347],
[283,334],
[273,309],
[281,278],
[292,258],
[330,230],
[393,182],
[422,127],
[415,74],
[372,22],
[304,0],
[238,2],
[161,24],
[107,68],
[76,121],
[70,149],
[89,266],
[115,328],
[147,366],
[188,393],
[246,408],
[288,401],
[329,367],
[336,321],
[313,252],
[291,226],
[267,195],
[248,158],
[240,122],
[258,100],
[283,104],
[287,132],
[260,154],
[250,158],
[184,166],
[147,164],
[89,172],
[48,190],
[17,224],
[0,280],
[5,352],
[38,424],
[75,460],
[131,492],
[183,507],
[242,512],
[295,502],
[346,478],
[371,455],
[400,410]]], dtype=np.int32)


def test_10():
    return np.array([[[331,0],
[304,11],
[305,288],
[310,388],
[342,476],
[400,512],
[443,511],
[470,498],
[491,459],
[512,309],
[468,191],
[330,158],
[147,152],
[20,200],
[0,260],
[27,319],
[66,351],
[106,361],
[172,345],
[279,308],
[361,291],
[421,291],
[448,321],
[433,387],
[394,366],
[389,317],
[398,145],
[408,40],
[405,24],
[363,24],
[338,33],
[332,48],
[332,215],
[335,320],
[348,425],
[384,458],
[459,448],
[476,417],
[489,307],
[445,222],
[361,197],
[280,201],
[180,199],
[144,211],
[124,236],
[123,272],
[115,297],
[79,315],
[59,299],
[62,275],
[84,266],
[105,257],
[275,229],
[419,244],
[447,257],
[466,311],
[468,343],
[451,412],
[424,427],
[372,388],
[367,349],
[366,259],
[372,144],
[378,40],
[376,17],
[371,5],
[366,0],
[352,0],
[344,0]]], dtype=np.int32)



def create_poly(src_filename=None):
    class LineBuilder:
        def __init__(self, ax):
            self._ax = ax
            self.line = None
            self.cid = self._ax.figure.canvas.mpl_connect('button_press_event', self)

        def __call__(self, event):
            print('click', event)
            if event.inaxes!=self._ax.axes: return
            
            if self.line is None:
                self.line, = self._ax.plot(event.xdata, event.ydata, 'ro-')  # empty line
                self.xs = list(self.line.get_xdata())
                self.ys = list(self.line.get_ydata())
                
            else:
                self.xs.append(event.xdata)
                self.ys.append(event.ydata)
                self.line.set_data(self.xs, self.ys)
            self.line.figure.canvas.draw()
    
    fig, ax = plt.subplots()
    ax.set_title('click to build line segments')
    if src_filename is not None:
        src_im = Image.open(src_filename)
        im = np.array(src_im)
        src_im.close()

        ax.imshow(im)

        invert_y_axis=True
    else:
        invert_y_axis=False
    
    linebuilder = LineBuilder(ax)
    plt.show()

    new_poly = np.vstack((linebuilder.xs, linebuilder.ys)).T

    if invert_y_axis:
        new_poly[:, 1] = 2 * new_poly[:, 1].max() - new_poly[:, 1]

    # Normalize the coordinates to the range [0, 511]
    new_poly = (new_poly - np.min(new_poly, axis=0)) / (np.max(new_poly, axis=0) - np.min(new_poly, axis=0)) * 512
    new_poly = new_poly.astype(np.int32)

    return new_poly
    

if __name__ == "__main__":
    parser = argparse.ArgumentParser('Polygon creation module')
    parser.add_argument('-d', '--dir', type=str, dest='output_dir', help='Directory where to save the new polygon', default='.')
    parser.add_argument('-o', '--output', type=str, dest='output', help='Output filename of the new polygon', required=True)
    parser.add_argument('-s', '--source', type=str, dest='src_filename', help='Image to use as reference for the polygon', required=False)

    args = parser.parse_args()

    new_poly = create_poly(args.src_filename)
    print('New polygon', new_poly)

    np.save(os.path.join(args.output_dir, args.output + '.npy'), new_poly)
    with open(os.path.join(args.output_dir, args.output + '.txt'), 'w') as f:
        f.write('np.array([[')
        for x, y in new_poly[:-1,:]:
            f.write('[%i,%i],\n' % (x, y))
        f.write('[%i,%i]]], dtype=np.int32)' % (new_poly[-1, 0], new_poly[-1, 1]))
    
    print('Saved polygon in %s' % args.output)
